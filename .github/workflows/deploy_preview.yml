name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up preview path
        run: |
          echo "PREVIEW_PATH=pr-${{ github.event.number }}" >> $GITHUB_ENV
          echo "PREVIEW_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or update preview directory
        run: |
          # Create preview directory
          mkdir -p gh-pages/${{ env.PREVIEW_PATH }}
          
          # Copy files to preview directory (exclude .git, .github, and gh-pages directory)
          rsync -av --exclude='.git' --exclude='.github' --exclude='gh-pages' --exclude='*.md' ./ gh-pages/${{ env.PREVIEW_PATH }}/
          
          # Create an index file if it doesn't exist
          if [ ! -f "gh-pages/${{ env.PREVIEW_PATH }}/index.html" ]; then
            cp gh-pages/${{ env.PREVIEW_PATH }}/* gh-pages/${{ env.PREVIEW_PATH }}/ 2>/dev/null || true
          fi

      - name: Commit and push to gh-pages
        run: |
          cd gh-pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy preview for PR #${{ github.event.number }}" || echo "No changes to commit"
          git push origin gh-pages

      - name: Enable GitHub Pages (if not already enabled)
        run: |
          gh api -X POST /repos/${{ github.repository }}/pages \
            --field source='{"branch":"gh-pages","path":"/"}' \
            --field build_type="legacy" || echo "Pages already enabled or failed to enable"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for deployment
        run: sleep 30

      - name: Find existing preview comment
        id: find-comment
        run: |
          COMMENT_ID=$(gh pr view ${{ github.event.number }} --json comments --jq '.comments[] | select(.body | contains("ðŸš€ **Preview deployed**")) | .id' | head -1)
          echo "comment_id=$COMMENT_ID" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update or create preview comment
        run: |
          COMMENT_BODY="ðŸš€ **Preview deployed**

          Your preview is ready! View it here:
          ðŸ‘€ **[Preview Site](${{ env.PREVIEW_URL }})**

          This preview will be automatically deleted when the PR is closed."

          if [ -n "${{ steps.find-comment.outputs.comment_id }}" ]; then
            gh pr comment ${{ github.event.number }} --edit-last --body "$COMMENT_BODY"
          else
            gh pr comment ${{ github.event.number }} --body "$COMMENT_BODY"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}