name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up preview repository name
        run: |
          echo "PREVIEW_REPO=claude-vibe-cocing-pr-${{ github.event.number }}" >> $GITHUB_ENV
          echo "PREVIEW_URL=https://${{ github.repository_owner }}.github.io/claude-vibe-cocing-pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Create preview repository
        run: |
          echo "Note: Repository creation requires manual setup or PAT token with repo creation permissions"
          echo "Skipping repository creation step"

      - name: Clone or initialize preview repository
        run: |
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com" > ~/.git-credentials

          # Try to clone existing repository
          if git clone https://github.com/${{ github.repository_owner }}/${{ env.PREVIEW_REPO }}.git preview-repo; then
            echo "Successfully cloned existing repository"
          else
            echo "Repository not found. Please create repository manually: ${{ github.repository_owner }}/${{ env.PREVIEW_REPO }}"
            echo "Creating local repository structure for now..."
            mkdir preview-repo
            cd preview-repo
            git init
            git remote add origin https://github.com/${{ github.repository_owner }}/${{ env.PREVIEW_REPO }}.git
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            echo "# Preview Repository" > README.md
            git add README.md
            git commit -m "Initial commit"
            git branch -M main
            cd ..
          fi

      - name: Copy files to preview repository
        run: |
          # Remove existing files except .git
          find preview-repo -mindepth 1 -name '.git' -prune -o -type f -print0 | xargs -0 rm -f
          find preview-repo -mindepth 1 -name '.git' -prune -o -type d -empty -print0 | xargs -0 rmdir 2>/dev/null || true

          # Copy all files except .github directory to prevent workflow recursion
          rsync -av --exclude='.git' --exclude='.github' --exclude='preview-repo' ./ preview-repo/

      - name: Commit and push to preview repository
        run: |
          cd preview-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy preview for PR #${{ github.event.number }}" || echo "No changes to commit"
          
          # Try to push
          if git push origin main; then
            echo "Successfully pushed to preview repository"
          else
            echo "Push failed. Please ensure the repository ${{ github.repository_owner }}/${{ env.PREVIEW_REPO }} exists and is accessible."
            echo "You may need to create the repository manually on GitHub."
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable GitHub Pages
        run: |
          gh api -X POST /repos/${{ github.repository_owner }}/${{ env.PREVIEW_REPO }}/pages \
            --field source='{"branch":"main","path":"/"}' \
            --field build_type="legacy" || echo "Pages already enabled or failed to enable"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for deployment
        run: sleep 30

      - name: Find existing preview comment
        id: find-comment
        run: |
          COMMENT_ID=$(gh pr view ${{ github.event.number }} --json comments --jq '.comments[] | select(.body | contains("ðŸš€ **Preview deployed**")) | .id' | head -1)
          echo "comment_id=$COMMENT_ID" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update or create preview comment
        run: |
          COMMENT_BODY="ðŸš€ **Preview deployed**

          Your preview is ready! View it here:
          ðŸ‘€ **[Preview Site](${{ env.PREVIEW_URL }})**

          This preview will be automatically deleted when the PR is closed."

          if [ -n "${{ steps.find-comment.outputs.comment_id }}" ]; then
            gh pr comment ${{ github.event.number }} --edit-last --body "$COMMENT_BODY"
          else
            gh pr comment ${{ github.event.number }} --body "$COMMENT_BODY"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
